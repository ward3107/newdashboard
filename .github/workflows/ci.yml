name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm test -- --run

      - name: Run tests with coverage
        run: npm run test:coverage
        if: matrix.node-version == '20.x'

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: matrix.node-version == '20.x'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: matrix.node-version == '20.x'
        with:
          name: dist
          path: dist/
          retention-days: 7

  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for secrets in code
        run: |
          if grep -r "sk-" --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" src/; then
            echo "Error: Found potential API keys in source code!"
            exit 1
          fi

      - name: Check file naming conventions
        run: |
          if find src -type f -name "*.test.*" | grep -v ".test.tsx\$\|.test.ts\$\|.test.jsx\$\|.test.js\$"; then
            echo "Error: Test files should use .test.{ts,tsx,js,jsx} extension"
            exit 1
          fi

  accessibility:
    name: Accessibility Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run accessibility tests
        run: |
          echo "Accessibility tests placeholder"
          echo "TODO: Add axe-core or pa11y tests"

  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Check for vulnerable dependencies
        run: |
          npm audit --audit-level=high --json > audit.json || true
          if [ -f audit.json ]; then
            cat audit.json
          fi
